@using Labb.Features.Shared;
@using Labb.Features.Login;
@*@model ComposedPageViewModel<LoginPage, LoginPageViewModel>*@
@model LoginPageViewModel

<style>
    #Username-error {
        color: red;
    }
</style>

<h1>Login</h1>

@using (Html.BeginForm("Login", "LoginPage", FormMethod.Post))
{
    @*@Html.HiddenFor(x => x.ViewModel)*@
    <div>
        @Html.LabelFor(x => x.Username)
        @Html.TextBoxFor(x => x.Username)
        @Html.ValidationMessageFor(x => x.Username)
        @*<span data-val-name style="color:red"></span>*@
    </div>
    <div>
        @Html.LabelFor(x => x.Password)
        @Html.TextBoxFor(x => x.Password)
        @Html.ValidationMessageFor(x => x.Password)
    </div>
        <button type="submit">Login</button>
}

@*<form asp-controller="LoginPage" asp-action="Login" method="post" name="model">
    <div>
        @Html.LabelFor(x => x.ViewModel.Username)
        @Html.TextBoxFor(x => x.ViewModel.Username)
    </div>
    <div>
        @Html.LabelFor(x => x.ViewModel.Password)
        @Html.TextBoxFor(x => x.ViewModel.Password)
    </div>
    <button type="submit">Login</button>
</form>*@

@*<script>
    jQuery.validator.addMethod("name", function (value, element, param) {
        if (value != "Tom") {
            console.log("false")
            return false;
        }
        else {
                console.log("true")
            return true;
        }
    });

jQuery.validator.unobtrusive.adapters.addBool("name");
</script>*@